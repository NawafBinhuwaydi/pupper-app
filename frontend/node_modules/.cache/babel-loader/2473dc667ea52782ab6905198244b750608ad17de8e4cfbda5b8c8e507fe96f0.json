{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = headers => Object.entries(headers).map(_ref => {\n  var _value$trim$replace;\n  let [key, value] = _ref;\n  return {\n    key: key.toLowerCase(),\n    value: (_value$trim$replace = value === null || value === void 0 ? void 0 : value.trim().replace(/\\s+/g, ' ')) !== null && _value$trim$replace !== void 0 ? _value$trim$replace : ''\n  };\n}).sort((a, b) => a.key < b.key ? -1 : 1).map(entry => \"\".concat(entry.key, \":\").concat(entry.value, \"\\n\")).join('');\nexport { getCanonicalHeaders };\n//# sourceMappingURL=getCanonicalHeaders.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
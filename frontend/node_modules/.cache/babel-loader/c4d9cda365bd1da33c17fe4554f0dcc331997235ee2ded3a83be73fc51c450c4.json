{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nconst deDupeAsyncFunction = asyncFunction => {\n  let inflightPromise;\n  return async function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (inflightPromise) return inflightPromise;\n    inflightPromise = new Promise((resolve, reject) => {\n      asyncFunction(...args).then(result => {\n        resolve(result);\n      }).catch(error => {\n        reject(error);\n      }).finally(() => {\n        inflightPromise = undefined;\n      });\n    });\n    return inflightPromise;\n  };\n};\nexport { deDupeAsyncFunction };\n//# sourceMappingURL=deDupeAsyncFunction.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nasync function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n  try {\n    return await func(...args);\n  } catch (error) {\n    if (error instanceof AuthError && error.name === 'ResourceNotFoundException' && error.message.includes('Device does not exist.')) {\n      await tokenOrchestrator.clearDeviceMetadata(username);\n      return func(...args);\n    }\n    throw error;\n  }\n}\nexport { retryOnResourceNotFoundException };\n//# sourceMappingURL=retryOnResourceNotFoundException.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
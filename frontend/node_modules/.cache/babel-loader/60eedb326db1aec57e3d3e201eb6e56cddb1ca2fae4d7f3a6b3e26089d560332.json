{"ast":null,"code":"import _objectSpread from \"/home/nawaf/aws-project/pupper-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = input => {\n  var _customUserAgentState;\n  // Save custom user-agent state & increment reference counter\n  // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n  customUserAgentState[input.category] = input.apis.reduce((acc, api) => {\n    var _acc$api;\n    return _objectSpread(_objectSpread({}, acc), {}, {\n      [api]: {\n        refCount: (_acc$api = acc[api]) !== null && _acc$api !== void 0 && _acc$api.refCount ? acc[api].refCount + 1 : 1,\n        additionalDetails: input.additionalDetails\n      }\n    });\n  }, (_customUserAgentState = customUserAgentState[input.category]) !== null && _customUserAgentState !== void 0 ? _customUserAgentState : {});\n  // Callback that cleans up state for APIs recorded by this call\n  let cleanUpCallbackCalled = false;\n  const cleanUpCallback = () => {\n    // Only allow the cleanup callback to be called once\n    if (cleanUpCallbackCalled) {\n      return;\n    }\n    cleanUpCallbackCalled = true;\n    input.apis.forEach(api => {\n      const apiRefCount = customUserAgentState[input.category][api].refCount;\n      if (apiRefCount > 1) {\n        customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n      } else {\n        delete customUserAgentState[input.category][api];\n        // Clean up category if no more APIs set\n        if (!Object.keys(customUserAgentState[input.category]).length) {\n          delete customUserAgentState[input.category];\n        }\n      }\n    });\n  };\n  return cleanUpCallback;\n};\nconst getCustomUserAgent = (category, api) => {\n  var _customUserAgentState2;\n  return (_customUserAgentState2 = customUserAgentState[category]) === null || _customUserAgentState2 === void 0 || (_customUserAgentState2 = _customUserAgentState2[api]) === null || _customUserAgentState2 === void 0 ? void 0 : _customUserAgentState2.additionalDetails;\n};\nexport { getCustomUserAgent, setCustomUserAgent };\n//# sourceMappingURL=customUserAgent.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { assertPasskeyError, PasskeyErrorCode, handlePasskeyAuthenticationError } from './errors.mjs';\nimport { getIsPasskeySupported } from './getIsPasskeySupported.mjs';\nimport { deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson } from './serde.mjs';\nimport { assertCredentialIsPkcWithAuthenticatorAssertionResponse } from './types/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getPasskey = async input => {\n  try {\n    const isPasskeySupported = getIsPasskeySupported();\n    assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n    const passkeyGetOptions = deserializeJsonToPkcGetOptions(input);\n    const credential = await navigator.credentials.get({\n      publicKey: passkeyGetOptions\n    });\n    assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential);\n    return serializePkcWithAssertionToJson(credential);\n  } catch (err) {\n    throw handlePasskeyAuthenticationError(err);\n  }\n};\nexport { getPasskey };\n//# sourceMappingURL=getPasskey.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
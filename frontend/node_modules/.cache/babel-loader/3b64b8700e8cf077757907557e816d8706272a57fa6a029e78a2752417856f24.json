{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { dogsApi, apiUtils } from '../services/api';\nimport { toast } from 'react-toastify';\n\n// Query keys\nexport const QUERY_KEYS = {\n  DOGS: 'dogs',\n  DOG: 'dog'\n};\n\n// Hook to fetch all dogs with filters\nexport const useDogs = (filters = {}, options = {}) => {\n  _s();\n  return useQuery([QUERY_KEYS.DOGS, filters], () => dogsApi.getDogs(filters), {\n    staleTime: 2 * 60 * 1000,\n    // 2 minutes\n    cacheTime: 5 * 60 * 1000,\n    // 5 minutes\n    onError: error => {\n      const errorInfo = apiUtils.handleError(error);\n      toast.error(`Failed to load dogs: ${errorInfo.message}`);\n    },\n    ...options\n  });\n};\n\n// Hook to fetch single dog\n_s(useDogs, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useDog = (dogId, options = {}) => {\n  _s2();\n  return useQuery([QUERY_KEYS.DOG, dogId], () => dogsApi.getDog(dogId), {\n    enabled: !!dogId,\n    staleTime: 5 * 60 * 1000,\n    // 5 minutes\n    cacheTime: 10 * 60 * 1000,\n    // 10 minutes\n    onError: error => {\n      const errorInfo = apiUtils.handleError(error);\n      toast.error(`Failed to load dog details: ${errorInfo.message}`);\n    },\n    ...options\n  });\n};\n\n// Hook to vote on a dog\n_s2(useDog, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useVoteDog = () => {\n  _s3();\n  const queryClient = useQueryClient();\n  return useMutation(({\n    dogId,\n    voteData\n  }) => dogsApi.voteDog(dogId, voteData), {\n    onSuccess: (data, variables) => {\n      const {\n        dogId\n      } = variables;\n\n      // Update the dog's vote counts in cache\n      queryClient.setQueryData([QUERY_KEYS.DOG, dogId], oldData => {\n        if (!oldData) return oldData;\n        const updatedDog = {\n          ...oldData.data\n        };\n        if (variables.voteData.vote_type === 'wag') {\n          updatedDog.wag_count = (updatedDog.wag_count || 0) + 1;\n        } else if (variables.voteData.vote_type === 'growl') {\n          updatedDog.growl_count = (updatedDog.growl_count || 0) + 1;\n        }\n        return {\n          ...oldData,\n          data: updatedDog\n        };\n      });\n\n      // Show success message\n      const voteType = variables.voteData.vote_type === 'wag' ? '🐕 Wag' : '😤 Growl';\n      toast.success(`${voteType} recorded successfully!`);\n    },\n    onError: error => {\n      const errorInfo = apiUtils.handleError(error);\n      toast.error(`Failed to record vote: ${errorInfo.message}`);\n    }\n  });\n};\n\n// Custom hook for managing favorites (using localStorage)\n_s3(useVoteDog, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useFavorites = () => {\n  const getFavorites = () => {\n    try {\n      const favorites = localStorage.getItem('pupperFavorites');\n      return favorites ? JSON.parse(favorites) : [];\n    } catch (error) {\n      console.error('Error reading favorites:', error);\n      return [];\n    }\n  };\n  const addToFavorites = dogId => {\n    try {\n      const favorites = getFavorites();\n      if (!favorites.includes(dogId)) {\n        const newFavorites = [...favorites, dogId];\n        localStorage.setItem('pupperFavorites', JSON.stringify(newFavorites));\n        toast.success('Added to favorites! ❤️');\n        return newFavorites;\n      }\n      return favorites;\n    } catch (error) {\n      console.error('Error adding to favorites:', error);\n      toast.error('Failed to add to favorites');\n      return getFavorites();\n    }\n  };\n  const removeFromFavorites = dogId => {\n    try {\n      const favorites = getFavorites();\n      const newFavorites = favorites.filter(id => id !== dogId);\n      localStorage.setItem('pupperFavorites', JSON.stringify(newFavorites));\n      toast.success('Removed from favorites');\n      return newFavorites;\n    } catch (error) {\n      console.error('Error removing from favorites:', error);\n      toast.error('Failed to remove from favorites');\n      return getFavorites();\n    }\n  };\n  const isFavorite = dogId => {\n    const favorites = getFavorites();\n    return favorites.includes(dogId);\n  };\n  const toggleFavorite = dogId => {\n    if (isFavorite(dogId)) {\n      return removeFromFavorites(dogId);\n    } else {\n      return addToFavorites(dogId);\n    }\n  };\n  return {\n    favorites: getFavorites(),\n    addToFavorites,\n    removeFromFavorites,\n    isFavorite,\n    toggleFavorite\n  };\n};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","dogsApi","apiUtils","toast","QUERY_KEYS","DOGS","DOG","useDogs","filters","options","_s","getDogs","staleTime","cacheTime","onError","error","errorInfo","handleError","message","useDog","dogId","_s2","getDog","enabled","useVoteDog","_s3","queryClient","voteData","voteDog","onSuccess","data","variables","setQueryData","oldData","updatedDog","vote_type","wag_count","growl_count","voteType","success","useFavorites","getFavorites","favorites","localStorage","getItem","JSON","parse","console","addToFavorites","includes","newFavorites","setItem","stringify","removeFromFavorites","filter","id","isFavorite","toggleFavorite"],"sources":["/home/nawaf/pupper-app/frontend/src/hooks/useDogs.js"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { dogsApi, apiUtils } from '../services/api';\nimport { toast } from 'react-toastify';\n\n// Query keys\nexport const QUERY_KEYS = {\n  DOGS: 'dogs',\n  DOG: 'dog',\n};\n\n// Hook to fetch all dogs with filters\nexport const useDogs = (filters = {}, options = {}) => {\n  return useQuery(\n    [QUERY_KEYS.DOGS, filters],\n    () => dogsApi.getDogs(filters),\n    {\n      staleTime: 2 * 60 * 1000, // 2 minutes\n      cacheTime: 5 * 60 * 1000, // 5 minutes\n      onError: (error) => {\n        const errorInfo = apiUtils.handleError(error);\n        toast.error(`Failed to load dogs: ${errorInfo.message}`);\n      },\n      ...options,\n    }\n  );\n};\n\n// Hook to fetch single dog\nexport const useDog = (dogId, options = {}) => {\n  return useQuery(\n    [QUERY_KEYS.DOG, dogId],\n    () => dogsApi.getDog(dogId),\n    {\n      enabled: !!dogId,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      cacheTime: 10 * 60 * 1000, // 10 minutes\n      onError: (error) => {\n        const errorInfo = apiUtils.handleError(error);\n        toast.error(`Failed to load dog details: ${errorInfo.message}`);\n      },\n      ...options,\n    }\n  );\n};\n\n// Hook to vote on a dog\nexport const useVoteDog = () => {\n  const queryClient = useQueryClient();\n\n  return useMutation(\n    ({ dogId, voteData }) => dogsApi.voteDog(dogId, voteData),\n    {\n      onSuccess: (data, variables) => {\n        const { dogId } = variables;\n        \n        // Update the dog's vote counts in cache\n        queryClient.setQueryData([QUERY_KEYS.DOG, dogId], (oldData) => {\n          if (!oldData) return oldData;\n          \n          const updatedDog = { ...oldData.data };\n          if (variables.voteData.vote_type === 'wag') {\n            updatedDog.wag_count = (updatedDog.wag_count || 0) + 1;\n          } else if (variables.voteData.vote_type === 'growl') {\n            updatedDog.growl_count = (updatedDog.growl_count || 0) + 1;\n          }\n          \n          return {\n            ...oldData,\n            data: updatedDog,\n          };\n        });\n\n        // Show success message\n        const voteType = variables.voteData.vote_type === 'wag' ? '🐕 Wag' : '😤 Growl';\n        toast.success(`${voteType} recorded successfully!`);\n      },\n      onError: (error) => {\n        const errorInfo = apiUtils.handleError(error);\n        toast.error(`Failed to record vote: ${errorInfo.message}`);\n      },\n    }\n  );\n};\n\n// Custom hook for managing favorites (using localStorage)\nexport const useFavorites = () => {\n  const getFavorites = () => {\n    try {\n      const favorites = localStorage.getItem('pupperFavorites');\n      return favorites ? JSON.parse(favorites) : [];\n    } catch (error) {\n      console.error('Error reading favorites:', error);\n      return [];\n    }\n  };\n\n  const addToFavorites = (dogId) => {\n    try {\n      const favorites = getFavorites();\n      if (!favorites.includes(dogId)) {\n        const newFavorites = [...favorites, dogId];\n        localStorage.setItem('pupperFavorites', JSON.stringify(newFavorites));\n        toast.success('Added to favorites! ❤️');\n        return newFavorites;\n      }\n      return favorites;\n    } catch (error) {\n      console.error('Error adding to favorites:', error);\n      toast.error('Failed to add to favorites');\n      return getFavorites();\n    }\n  };\n\n  const removeFromFavorites = (dogId) => {\n    try {\n      const favorites = getFavorites();\n      const newFavorites = favorites.filter(id => id !== dogId);\n      localStorage.setItem('pupperFavorites', JSON.stringify(newFavorites));\n      toast.success('Removed from favorites');\n      return newFavorites;\n    } catch (error) {\n      console.error('Error removing from favorites:', error);\n      toast.error('Failed to remove from favorites');\n      return getFavorites();\n    }\n  };\n\n  const isFavorite = (dogId) => {\n    const favorites = getFavorites();\n    return favorites.includes(dogId);\n  };\n\n  const toggleFavorite = (dogId) => {\n    if (isFavorite(dogId)) {\n      return removeFromFavorites(dogId);\n    } else {\n      return addToFavorites(dogId);\n    }\n  };\n\n  return {\n    favorites: getFavorites(),\n    addToFavorites,\n    removeFromFavorites,\n    isFavorite,\n    toggleFavorite,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
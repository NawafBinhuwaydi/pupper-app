{"ast":null,"code":"import { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthErrorTypes } from '../../../../types/Auth.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nconst validationFailedMessage = 'An error occurred while validating the state.';\nconst validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nconst validateState = async state => {\n  const savedState = await oAuthStore.loadOAuthState();\n  // This is because savedState only exists if the flow was initiated by Amplify\n  const validatedState = state === savedState ? savedState : undefined;\n  if (!validatedState) {\n    throw new AuthError({\n      name: AuthErrorTypes.OAuthSignInError,\n      message: state === null ? flowCancelledMessage : validationFailedMessage,\n      recoverySuggestion: state === null ? undefined : validationRecoverySuggestion\n    });\n  }\n  return validatedState;\n};\nexport { flowCancelledMessage, validateState, validationFailedMessage, validationRecoverySuggestion };\n//# sourceMappingURL=validateState.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
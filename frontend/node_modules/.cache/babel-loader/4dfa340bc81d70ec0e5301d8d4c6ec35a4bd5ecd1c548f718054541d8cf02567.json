{"ast":null,"code":"import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { InMemoryStorage } from './InMemoryStorage.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst logger = new ConsoleLogger('CoreStorageUtils');\nconst getLocalStorageWithFallback = () => {\n  try {\n    // Attempt to use localStorage directly\n    if (typeof window !== 'undefined' && window.localStorage) {\n      return window.localStorage;\n    }\n  } catch (e) {\n    // Handle any errors related to localStorage access\n    logger.info('localStorage not found. InMemoryStorage is used as a fallback.');\n  }\n  // Return in-memory storage as a fallback if localStorage is not accessible\n  return new InMemoryStorage();\n};\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nconst getSessionStorageWithFallback = () => {\n  try {\n    // Attempt to use sessionStorage directly\n    if (typeof window !== 'undefined' && window.sessionStorage) {\n      // Verify we can actually use it by testing access\n      window.sessionStorage.getItem('test');\n      return window.sessionStorage;\n    }\n    throw new Error('sessionStorage is not defined');\n  } catch (e) {\n    // Handle any errors related to sessionStorage access\n    logger.info('sessionStorage not found. InMemoryStorage is used as a fallback.');\n    return new InMemoryStorage();\n  }\n};\nexport { getLocalStorageWithFallback, getSessionStorageWithFallback };\n//# sourceMappingURL=utils.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
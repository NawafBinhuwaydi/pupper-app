{"ast":null,"code":"class AmplifyError extends Error {\n  /**\n   *  Constructs an AmplifyError.\n   *\n   * @param message text that describes the main problem.\n   * @param underlyingError the underlying cause of the error.\n   * @param recoverySuggestion suggestion to recover from the error.\n   *\n   */\n  constructor(_ref) {\n    let {\n      message,\n      name,\n      recoverySuggestion,\n      underlyingError,\n      metadata\n    } = _ref;\n    super(message);\n    this.name = name;\n    this.underlyingError = underlyingError;\n    this.recoverySuggestion = recoverySuggestion;\n    if (metadata) {\n      // If metadata exists, explicitly only record the following properties.\n      const {\n        extendedRequestId,\n        httpStatusCode,\n        requestId\n      } = metadata;\n      this.metadata = {\n        extendedRequestId,\n        httpStatusCode,\n        requestId\n      };\n    }\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = AmplifyError;\n    Object.setPrototypeOf(this, AmplifyError.prototype);\n  }\n}\nexport { AmplifyError };\n//# sourceMappingURL=AmplifyError.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
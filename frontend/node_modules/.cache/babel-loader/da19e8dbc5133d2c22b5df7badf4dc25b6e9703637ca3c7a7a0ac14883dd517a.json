{"ast":null,"code":"import { getBtoa } from '../../globalHelpers/index.mjs';\nimport { bytesToString } from './bytesToString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Encoder = {\n  /**\n   * Convert input to base64-encoded string\n   * @param input - string to convert to base64\n   * @param options - encoding options that can optionally produce a base64url string\n   * @returns base64-encoded string\n   */\n  convert(input, options = {\n    urlSafe: false,\n    skipPadding: false\n  }) {\n    const inputStr = typeof input === 'string' ? input : bytesToString(input);\n    let encodedStr = getBtoa()(inputStr);\n    // urlSafe char replacement and skipPadding options conform to the base64url spec\n    // https://datatracker.ietf.org/doc/html/rfc4648#section-5\n    if (options.urlSafe) {\n      encodedStr = encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n    if (options.skipPadding) {\n      encodedStr = encodedStr.replace(/=/g, '');\n    }\n    return encodedStr;\n  }\n};\nexport { base64Encoder };\n//# sourceMappingURL=base64Encoder.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
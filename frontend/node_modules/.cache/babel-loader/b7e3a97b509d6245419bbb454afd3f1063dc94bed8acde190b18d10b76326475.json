{"ast":null,"code":"import axios from 'axios';\n\n// Use proxy in development, direct API in production\nconst API_BASE_URL = process.env.NODE_ENV === 'development' ? '/api' // Use proxy in development\n: process.env.REACT_APP_API_URL || 'https://bj9jbp1rgf.execute-api.us-east-1.amazonaws.com/prod';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for error handling\napi.interceptors.request.use(config => config, error => Promise.reject(error));\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  // Log errors in development only\n  if (process.env.NODE_ENV === 'development') {\n    var _error$response;\n    console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n  return Promise.reject(error);\n});\n\n// Dogs API\nexport const dogsApi = {\n  // Get all dogs with optional filters\n  getDogs: async (filters = {}) => {\n    const params = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined && value !== null && value !== '') {\n        params.append(key, value);\n      }\n    });\n    const queryString = params.toString();\n    const url = queryString ? `/dogs?${queryString}` : '/dogs';\n    const response = await api.get(url);\n    return response.data;\n  },\n  // Get single dog by ID\n  getDog: async dogId => {\n    const response = await api.get(`/dogs/${dogId}`);\n    return response.data;\n  },\n  // Create a new dog\n  createDog: async dogData => {\n    const response = await api.post('/dogs', dogData);\n    return response.data;\n  },\n  // Update a dog\n  updateDog: async (dogId, updates) => {\n    const response = await api.put(`/dogs/${dogId}`, updates);\n    return response.data;\n  },\n  // Delete a dog\n  deleteDog: async dogId => {\n    const response = await api.delete(`/dogs/${dogId}`);\n    return response.data;\n  },\n  // Vote on dog\n  voteDog: async (dogId, voteData) => {\n    const response = await api.post(`/dogs/${dogId}/vote`, voteData);\n    return response.data;\n  }\n};\n\n// Images API\nexport const imagesApi = {\n  // Upload an image\n  uploadImage: async imageData => {\n    const response = await api.post('/images', imageData);\n    return response.data;\n  },\n  // Get image metadata\n  getImage: async imageId => {\n    const response = await api.get(`/images/${imageId}`);\n    return response.data;\n  }\n};\n\n// Utility functions\nexport const apiUtils = {\n  // Handle API errors\n  handleError: error => {\n    if (error.response) {\n      var _error$response$data, _error$response$data2;\n      // Server responded with error status\n      const message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || `Server error (${error.response.status})`;\n      return {\n        message,\n        status: error.response.status,\n        data: error.response.data\n      };\n    } else if (error.request) {\n      // Request was made but no response received\n      return {\n        message: 'Unable to connect to server. Please try again.',\n        status: 0,\n        data: null\n      };\n    } else {\n      // Something else happened\n      return {\n        message: error.message || 'An unexpected error occurred',\n        status: 0,\n        data: null\n      };\n    }\n  },\n  // Format image URL with fallback\n  getImageUrl: (dog, size = '400x400') => {\n    if (dog.dog_photo_400x400_url && size === '400x400') {\n      return dog.dog_photo_400x400_url;\n    }\n    if (dog.dog_photo_50x50_url && size === '50x50') {\n      return dog.dog_photo_50x50_url;\n    }\n    if (dog.dog_photo_url) {\n      return dog.dog_photo_url;\n    }\n    return 'https://via.placeholder.com/400x400/e5e7eb/9ca3af?text=Dog+Photo';\n  },\n  // Format dog age\n  formatAge: ageYears => {\n    if (!ageYears) return 'Unknown age';\n    const years = Math.floor(ageYears);\n    const months = Math.round((ageYears - years) * 12);\n    if (years === 0) {\n      return `${months} month${months !== 1 ? 's' : ''} old`;\n    } else if (months === 0) {\n      return `${years} year${years !== 1 ? 's' : ''} old`;\n    } else {\n      return `${years} year${years !== 1 ? 's' : ''}, ${months} month${months !== 1 ? 's' : ''} old`;\n    }\n  },\n  // Format weight\n  formatWeight: weight => {\n    if (!weight) return 'Unknown weight';\n    return `${weight} lbs`;\n  },\n  // Get status badge color\n  getStatusColor: status => {\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'available':\n        return 'bg-green-100 text-green-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'adopted':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-green-100 text-green-800';\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","console","data","message","dogsApi","getDogs","filters","params","URLSearchParams","Object","entries","forEach","key","value","undefined","append","queryString","toString","url","get","getDog","dogId","createDog","dogData","post","updateDog","updates","put","deleteDog","delete","voteDog","voteData","imagesApi","uploadImage","imageData","getImage","imageId","apiUtils","handleError","_error$response$data","_error$response$data2","status","getImageUrl","dog","size","dog_photo_400x400_url","dog_photo_50x50_url","dog_photo_url","formatAge","ageYears","years","Math","floor","months","round","formatWeight","weight","getStatusColor","toLowerCase"],"sources":["/home/nawaf/pupper-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Use proxy in development, direct API in production\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \n  ? '/api'  // Use proxy in development\n  : (process.env.REACT_APP_API_URL || 'https://bj9jbp1rgf.execute-api.us-east-1.amazonaws.com/prod');\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for error handling\napi.interceptors.request.use(\n  (config) => config,\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Log errors in development only\n    if (process.env.NODE_ENV === 'development') {\n      console.error('API Error:', error.response?.data || error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Dogs API\nexport const dogsApi = {\n  // Get all dogs with optional filters\n  getDogs: async (filters = {}) => {\n    const params = new URLSearchParams();\n    \n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined && value !== null && value !== '') {\n        params.append(key, value);\n      }\n    });\n    \n    const queryString = params.toString();\n    const url = queryString ? `/dogs?${queryString}` : '/dogs';\n    \n    const response = await api.get(url);\n    return response.data;\n  },\n\n  // Get single dog by ID\n  getDog: async (dogId) => {\n    const response = await api.get(`/dogs/${dogId}`);\n    return response.data;\n  },\n\n  // Create a new dog\n  createDog: async (dogData) => {\n    const response = await api.post('/dogs', dogData);\n    return response.data;\n  },\n\n  // Update a dog\n  updateDog: async (dogId, updates) => {\n    const response = await api.put(`/dogs/${dogId}`, updates);\n    return response.data;\n  },\n\n  // Delete a dog\n  deleteDog: async (dogId) => {\n    const response = await api.delete(`/dogs/${dogId}`);\n    return response.data;\n  },\n\n  // Vote on dog\n  voteDog: async (dogId, voteData) => {\n    const response = await api.post(`/dogs/${dogId}/vote`, voteData);\n    return response.data;\n  },\n};\n\n// Images API\nexport const imagesApi = {\n  // Upload an image\n  uploadImage: async (imageData) => {\n    const response = await api.post('/images', imageData);\n    return response.data;\n  },\n\n  // Get image metadata\n  getImage: async (imageId) => {\n    const response = await api.get(`/images/${imageId}`);\n    return response.data;\n  },\n};\n\n// Utility functions\nexport const apiUtils = {\n  // Handle API errors\n  handleError: (error) => {\n    if (error.response) {\n      // Server responded with error status\n      const message = error.response.data?.error || \n                     error.response.data?.message || \n                     `Server error (${error.response.status})`;\n      return {\n        message,\n        status: error.response.status,\n        data: error.response.data,\n      };\n    } else if (error.request) {\n      // Request was made but no response received\n      return {\n        message: 'Unable to connect to server. Please try again.',\n        status: 0,\n        data: null,\n      };\n    } else {\n      // Something else happened\n      return {\n        message: error.message || 'An unexpected error occurred',\n        status: 0,\n        data: null,\n      };\n    }\n  },\n\n  // Format image URL with fallback\n  getImageUrl: (dog, size = '400x400') => {\n    if (dog.dog_photo_400x400_url && size === '400x400') {\n      return dog.dog_photo_400x400_url;\n    }\n    if (dog.dog_photo_50x50_url && size === '50x50') {\n      return dog.dog_photo_50x50_url;\n    }\n    if (dog.dog_photo_url) {\n      return dog.dog_photo_url;\n    }\n    return 'https://via.placeholder.com/400x400/e5e7eb/9ca3af?text=Dog+Photo';\n  },\n\n  // Format dog age\n  formatAge: (ageYears) => {\n    if (!ageYears) return 'Unknown age';\n    \n    const years = Math.floor(ageYears);\n    const months = Math.round((ageYears - years) * 12);\n    \n    if (years === 0) {\n      return `${months} month${months !== 1 ? 's' : ''} old`;\n    } else if (months === 0) {\n      return `${years} year${years !== 1 ? 's' : ''} old`;\n    } else {\n      return `${years} year${years !== 1 ? 's' : ''}, ${months} month${months !== 1 ? 's' : ''} old`;\n    }\n  },\n\n  // Format weight\n  formatWeight: (weight) => {\n    if (!weight) return 'Unknown weight';\n    return `${weight} lbs`;\n  },\n\n  // Get status badge color\n  getStatusColor: (status) => {\n    switch (status?.toLowerCase()) {\n      case 'available':\n        return 'bg-green-100 text-green-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'adopted':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-green-100 text-green-800';\n    }\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}